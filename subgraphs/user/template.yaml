specVersion: 0.0.6
schema:
  file: ./schema.graphql
dataSources:
# BENTOBOX
  - kind: ethereum/contract
    name: BentoBox
    network: {{ network }}
    source:
      address: '{{ bentobox.address }}'
      startBlock: {{ bentobox.startBlock }}
      abi: BentoBox
    mapping:
      kind: ethereun/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/bentobox.ts
      entities: []
      abis:
        - name: BentoBox
          file: ./node_modules/abi/BentoBox/BentoBox.json
        - name: KashiPair
          file: ./node_modules/abi/Kashi/KashiPair.json
      eventHandlers:
        - event: LogDeposit(indexed address,indexed address,indexed address,uint256,uint256)
          handler: onLogDeposit
        - event: LogWithdraw(indexed address,indexed address,indexed address,uint256,uint256)
          handler: onLogWithdraw
        - event: LogTransfer(indexed address,indexed address,indexed address,uint256)
          handler: onLogTransfer
        - event: LogFlashLoan(indexed address,indexed address,uint256,uint256,indexed address)
          handler: onLogFlashLoan
        - event: LogSetMasterContractApproval(indexed address,indexed address,bool)
          handler: onLogSetMasterContractApproval
        - event: LogDeploy(indexed address,bytes,indexed address)
          handler: onLogDeploy
# SUSHISWAP
  - kind: ethereum/contract
    name: Factory
    network: {{ network }}
    source:
      address: '{{ legacy.factory.address }}'
      abi: Factory
      startBlock: {{ legacy.factory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/sushiswap-factory.ts
      entities: []
      abis:
        - name: Factory
          file: ./node_modules/abi/Uniswap/UniswapV2Factory.json
        - name: Pair
          file: ./node_modules/abi/Uniswap/UniswapV2Pair.json
      eventHandlers:
        - event: PairCreated(indexed address,indexed address,address,uint256)
          handler: onPairCreated
# MASTER_CHEF_V1
  - kind: ethereum/contract
    name: MasterChefV1
    network: {{ network }}
    source:
      address: '{{ masterChefV1.address }}'
      abi: MasterChefV1
      startBlock: {{ masterChefV1.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities: []
      abis:
        - name: MasterChefV1
          file: ./node_modules/abi/MasterChefV1/MasterChefV1.json
      eventHandlers:
        - event: Deposit(indexed address,indexed uint256,uint256)
          handler: deposit
        - event: EmergencyWithdraw(indexed address,indexed uint256,uint256)
          handler: emergencyWithdraw
        - event: Withdraw(indexed address,indexed uint256,uint256)
          handler: withdraw
      file: ./src/mappings/masterchef-v1.ts
# MASTER_CHEF_V2
  - kind: ethereum/contract
    name: MasterChefV2
    network: {{ network }}
    source:
      address: '{{ masterChefV2.address }}'
      abi: MasterChefV2
      startBlock: {{ masterChefV2.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities: []
      abis:
        - name: MasterChefV2
          file: ./node_modules/abi/MasterChefV2/MasterChefV2.json
      eventHandlers:
        - event: Deposit(indexed address,indexed uint256,uint256,indexed address)
          handler: deposit
        - event: EmergencyWithdraw(indexed address,indexed uint256,uint256,indexed address)
          handler: emergencyWithdraw
        - event: Withdraw(indexed address,indexed uint256,uint256,indexed address)
          handler: withdraw
      file: ./src/mappings/masterchef-v2.ts
# SUSHI
  - kind: ethereum/contract
    name: Sushi
    network: {{ network }}
    source:
      address: '{{ sushi.address }}'
      startBlock: {{ sushi.startBlock }}
      abi: Sushi
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/sushi.ts
      entities: []
      abis:
        - name: Sushi
          file: ./node_modules/abi/SUSHI/SUSHI.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: onTransfer
# XSUSHI
  - kind: ethereum/contract
    name: xSushi
    network: {{ network }}
    source:
      address: '{{ xSushi.address }}'
      startBlock: {{ xSushi.startBlock }}
      abi: xSushi
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/xsushi.ts
      entities:
        - Transaction
        - User
      abis:
        - name: xSushi
          file: ./node_modules/abi/xSUSHI/xSUSHI.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: onTransfer
# FURO STREAM
  - kind: ethereum/contract
    name: FuroStream
    network: {{ network }}
    source:
      address: '{{ furo.stream.address }}'
      startBlock: {{ furo.stream.startBlock }}
      abi: FuroStream
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/furo-stream.ts
      entities: []
      abis:
        - name: FuroStream
          file: ./node_modules/abi/Furo/FuroStream.json
      eventHandlers:
        - event: CreateStream(indexed uint256,indexed address,indexed address,address,uint256,uint256,uint256,bool)
          handler: onCreateStream
        - event: Withdraw(indexed uint256,indexed uint256,indexed address,address,bool)
          handler: onWithdraw
# FURO VESTING
  - kind: ethereum/contract
    name: FuroVesting
    network: {{ network }}
    source:
      address: '{{ furo.vesting.address }}'
      startBlock: {{ furo.vesting.startBlock }}
      abi: FuroVesting
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/furo-vesting.ts
      entities: []
      abis:
        - name: FuroVesting
          file: ./node_modules/abi/Furo/FuroVesting.json
      eventHandlers:
        - event: CreateVesting(indexed uint256,address,indexed address,indexed address,uint32,uint32,uint32,uint32,uint128,uint128,bool)
          handler: onCreateVesting
        - event: Withdraw(indexed uint256,indexed address,indexed uint256,bool)
          handler: onWithdraw
# MISO MARKET
  - kind: ethereum/contract
    name: MISOMarket
    network: {{ network }}
    source:
      address: '{{ miso.market.address }}'
      abi: MISOMarket
      startBlock: {{ miso.market.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities: []
      abis:
        - name: MISOMarket
          file: ./node_modules/abi/Miso/Market.json
      eventHandlers:
        - event: MarketCreated(indexed address,indexed address,address)
          handler: onMarketCreated
      file: ./src/mappings/market.ts
# LIMIT ORDER
  - kind: ethereum/contract
    name: LimitOrder
    network: {{ network }}
    source:
      address: '{{ limitOrder.address }}'
      abi: LimitOrder
      startBlock: {{ limitOrder.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities: []
      abis:
        - name: LimitOrder
          file: ./node_modules/abi/LimitOrder/LimitOrder.json
      eventHandlers:
        - event: LogFillOrder(indexed address,indexed bytes32,address,uint256)
          handler: onFillOrder
        - event: LogOrderCancelled(indexed address,indexed bytes32)
          handler: onOrderCancelled
      file: ./src/mappings/limit-order.ts
templates:
# SUSHISWAP TEMPLATE
  - kind: ethereum/contract
    name: Pair
    network: {{ network }}
    source:
      abi: Pair
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/sushiswap-pair.ts
      entities: []
      abis:
        - name: Factory
          file: ./node_modules/abi/Uniswap/UniswapV2Factory.json
        - name: Pair
          file: ./node_modules/abi/Uniswap/UniswapV2Pair.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: onTransfer
        - event: Swap(indexed address,uint256,uint256,uint256,uint256,indexed address)
          handler: onSwap
# KASHI TEMPLATE
  - kind: ethereum/contract
    name: KashiPair
    network: {{ network }}
    source:
      abi: KashiPair
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/kashi.ts
      entities: []
      abis:
        - name: BentoBox
          file: ./node_modules/abi/BentoBox/BentoBox.json
        - name: KashiPair
          file: ./node_modules/abi/Kashi/KashiPair.json
      eventHandlers:
        - event: LogAddCollateral(indexed address,indexed address,uint256)
          handler: handleLogAddCollateral
        - event: LogAddAsset(indexed address,indexed address,uint256,uint256)
          handler: handleLogAddAsset
# MISO AUCTION
  - kind: ethereum/contract
    name: MisoAuction
    network: {{ network }}
    source:
      abi: MisoAuction
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/auction.ts
      entities: []
      abis:
        - name: MisoAuction
          file: ./node_modules/abi/Miso/Auction.json
      eventHandlers:
        - event: AddedCommitment(address,uint256)
          handler: onAddedCommitment
