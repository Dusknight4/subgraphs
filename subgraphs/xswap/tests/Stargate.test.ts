import { Address, BigInt, Bytes } from '@graphprotocol/graph-ts'
import { assert, clearStore, test } from 'matchstick-as/assembly/index'
import { createPacketEvent } from './mocks'
import {onPacket} from '../src/mappings/stargate'

function cleanup(): void {
  clearStore()
}

test('decode payload', () => {
  const chainId = 4 as u16
  // const payload = Bytes.fromByteArray(Bytes.fromHexString(
  //   '0x0000000000001ae0ed2f78f4ceb26c2e40056fba5468d8aa0e105438889ddd46451a2d03768ce8edb4e30b6539089b640067616e64616c6674686562726f776e67786d786e690012c337c237ad0900000000000000000000000000001e91011bf7caf4942f199236227ba4858ae389f6000000000000000000000000db654136fd25246736872c3a4c751075e7a3f79a0000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000b6b833049445a52df678fbb790a05d2039cb27fa0000000000000000000000000000000000000000000000000000000000b1cf75'
  // ))
  // sarang payload
  const payload = Bytes.fromByteArray(Bytes.fromHexString(
    '0x0000000000000c5e352d8275aae3e0c2404d9f68f6cee084b5beb3dd9d1b1669c73b033dfe47ae5a0164ab96df25b94400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000294e5493f720000000000000000000000000000000000000000000000000000000078f7caf0000000000000000000000000000000000000000000000000000000000000edf900000000000000000000000000000000000000000000000000000000001000b9000000000000000000000000000000000000000000000000000000000003194000000000000000000000000000000000000000000000000000000000000e904800000000000000000000000000000000000000000000000000000000791749ea00000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000014d08b5f3e89f1e2d6b067e0a0cbdb094e6e41e77c00000000000000000000000000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000850181048d79da108e8cb4ab5b00993755930d1100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120486647486b665479696e6378432d74323134346649000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000600000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000850181048d79da108e8cb4ab5b00993755930d110000000000000000000000000000000000000000000000000000000000000000'
  ))
  
  let packetEvent = createPacketEvent(chainId, payload)

  onPacket(packetEvent)


  cleanup()
})
